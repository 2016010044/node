详看day11
这里获取所有的轮播图并没有调用接口，而是在数据库中查到所有的数据，然后传给页面，页面通过nunjucks遍历。官方给出的遍历方法：
{% for item in items %}
  <li>{{ item.title }}</li>
{% else %}
  <li>This would display if the 'item' collection were empty</li>
{% endfor %}
在循环中可获取一些特殊的变量

loop.index: 当前循环数 (1 indexed)
loop.index0: 当前循环数 (0 indexed)
loop.revindex: 当前循环数，从后往前 (1 indexed)
loop.revindex0: 当前循环数，从后往前 (0 based)
loop.first: 是否第一个
loop.last: 是否最后一个
loop.length: 总数

现在添加轮播图有上传文件，所以不能就是直接插一条记录到数据库，上传文件就会用到formidable,先安装，再修改添加轮播图的代码：
router.post('/sowing/api/add', (req, res, next)=>{
    const form = new formidable.IncomingForm();
    form.uploadDir = config.uploadPath;  // 上传图片放置的文件夹
    form.keepExtensions = true; // 保持文件的原始扩展名
    form.parse(req, (err, fields, files)=>{
        /**
        * fields:普通字段
         * files:文件
        * **/
        if(err){
            return next(err);
        }
        // 1. 取出普通字段
        let body = fields;
        // 2. 解析上传的文件路径, 取出文件名保存到数据库
        body.image_url = basename(files.image_url.path);
        // 3. 操作数据库
        // 操作数据库
        const sowing = new Sowing({
            // 图片名称
            image_title: body.image_title,
            // 图片地址
            image_url: body.image_url,
            // 跳转链接
            image_link: body.image_link,
            // 上架时间
            s_time: body.s_time,
            // 下架时间
            e_time: body.e_time,
        });

        sowing.save((err, result)=>{
            if(err){
               return next(err);
            }
            res.json({
                status: 200,
                result: '添加轮播图成功'
            })
        });
    });
});